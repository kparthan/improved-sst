%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/pkas7/Research/Work/improved-sst/mixture/plots/normal_weights_update/100.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Wed Nov 13 13:34:31 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/pkas7/Research/Work/improved-sst/mixture/plots/normal_weights_update/100.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (pkas7)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Nov 13 13:34:31 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1022 448 M
63 0 V
5862 0 R
-63 0 V
938 448 M
( 900000) Rshow
1.000 UL
LTb
1022 1044 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1e+06) Rshow
1.000 UL
LTb
1022 1640 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.1e+06) Rshow
1.000 UL
LTb
1022 2236 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.2e+06) Rshow
1.000 UL
LTb
1022 2831 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.3e+06) Rshow
1.000 UL
LTb
1022 3427 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.4e+06) Rshow
1.000 UL
LTb
1022 4023 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.5e+06) Rshow
1.000 UL
LTb
1022 4619 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.6e+06) Rshow
1.000 UL
LTb
1022 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 0) Cshow
1.000 UL
LTb
2207 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
3392 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
4577 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 150) Cshow
1.000 UL
LTb
5762 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 200) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 250) Cshow
1.000 UL
LTb
1.000 UL
LTb
1022 4619 N
0 -4171 V
5925 0 V
0 4171 V
-5925 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(message length \(in bits\)) Cshow
grestore
LTb
LCb setrgbcolor
3984 98 M
(# of iterations) Cshow
LTb
3984 4829 M
(# of components: 100) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C 1022 4525 M
24 -216 V
23 -1235 V
24 -1632 V
24 -325 V
24 -51 V
23 -23 V
24 -20 V
24 -25 V
23 -31 V
24 -40 V
24 -49 V
23 -55 V
24 -50 V
24 -39 V
24 -35 V
23 -31 V
24 -24 V
24 -17 V
23 -11 V
24 -8 V
24 -6 V
23 -4 V
24 -4 V
24 -3 V
24 -2 V
23 -3 V
24 -2 V
24 -2 V
23 -2 V
24 -2 V
24 -3 V
23 -2 V
24 -2 V
24 -2 V
24 -1 V
23 -2 V
24 -2 V
24 -1 V
23 -2 V
24 -1 V
24 -2 V
23 -1 V
24 -1 V
24 -2 V
24 -1 V
23 -2 V
24 -1 V
24 -2 V
23 -2 V
24 -1 V
24 -2 V
23 -1 V
24 -1 V
24 -1 V
24 -1 V
23 -2 V
24 -1 V
24 -1 V
23 -1 V
24 -1 V
24 -1 V
23 -1 V
24 -1 V
24 -1 V
24 -1 V
23 -1 V
24 -1 V
24 -1 V
23 -2 V
24 -2 V
24 -2 V
23 -2 V
24 -3 V
24 -2 V
24 -1 V
23 -2 V
24 -2 V
24 -2 V
23 -1 V
24 -2 V
24 0 V
23 -1 V
24 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
stroke 3487 496 M
24 0 V
23 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 -1 V
stroke 5952 487 M
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
1022 4525 Pls
1046 4309 Pls
1069 3074 Pls
1093 1442 Pls
1117 1117 Pls
1141 1066 Pls
1164 1043 Pls
1188 1023 Pls
1212 998 Pls
1235 967 Pls
1259 927 Pls
1283 878 Pls
1306 823 Pls
1330 773 Pls
1354 734 Pls
1378 699 Pls
1401 668 Pls
1425 644 Pls
1449 627 Pls
1472 616 Pls
1496 608 Pls
1520 602 Pls
1543 598 Pls
1567 594 Pls
1591 591 Pls
1615 589 Pls
1638 586 Pls
1662 584 Pls
1686 582 Pls
1709 580 Pls
1733 578 Pls
1757 575 Pls
1780 573 Pls
1804 571 Pls
1828 569 Pls
1852 568 Pls
1875 566 Pls
1899 564 Pls
1923 563 Pls
1946 561 Pls
1970 560 Pls
1994 558 Pls
2017 557 Pls
2041 556 Pls
2065 554 Pls
2089 553 Pls
2112 551 Pls
2136 550 Pls
2160 548 Pls
2183 546 Pls
2207 545 Pls
2231 543 Pls
2254 542 Pls
2278 541 Pls
2302 540 Pls
2326 539 Pls
2349 537 Pls
2373 536 Pls
2397 535 Pls
2420 534 Pls
2444 533 Pls
2468 532 Pls
2491 531 Pls
2515 530 Pls
2539 529 Pls
2563 528 Pls
2586 527 Pls
2610 526 Pls
2634 525 Pls
2657 523 Pls
2681 521 Pls
2705 519 Pls
2728 517 Pls
2752 514 Pls
2776 512 Pls
2800 511 Pls
2823 509 Pls
2847 507 Pls
2871 505 Pls
2894 504 Pls
2918 502 Pls
2942 502 Pls
2965 501 Pls
2989 501 Pls
3013 501 Pls
3037 500 Pls
3060 500 Pls
3084 500 Pls
3108 500 Pls
3131 499 Pls
3155 499 Pls
3179 499 Pls
3202 499 Pls
3226 498 Pls
3250 498 Pls
3274 498 Pls
3297 498 Pls
3321 497 Pls
3345 497 Pls
3368 497 Pls
3392 497 Pls
3416 497 Pls
3439 496 Pls
3463 496 Pls
3487 496 Pls
3511 496 Pls
3534 496 Pls
3558 496 Pls
3582 495 Pls
3605 495 Pls
3629 495 Pls
3653 495 Pls
3676 495 Pls
3700 495 Pls
3724 495 Pls
3748 495 Pls
3771 495 Pls
3795 495 Pls
3819 495 Pls
3842 494 Pls
3866 494 Pls
3890 494 Pls
3913 494 Pls
3937 494 Pls
3961 494 Pls
3985 494 Pls
4008 494 Pls
4032 494 Pls
4056 494 Pls
4079 493 Pls
4103 493 Pls
4127 493 Pls
4150 493 Pls
4174 493 Pls
4198 493 Pls
4222 493 Pls
4245 493 Pls
4269 493 Pls
4293 493 Pls
4316 492 Pls
4340 492 Pls
4364 492 Pls
4387 492 Pls
4411 492 Pls
4435 492 Pls
4459 492 Pls
4482 492 Pls
4506 492 Pls
4530 492 Pls
4553 492 Pls
4577 491 Pls
4601 491 Pls
4624 491 Pls
4648 491 Pls
4672 491 Pls
4696 491 Pls
4719 491 Pls
4743 491 Pls
4767 491 Pls
4790 491 Pls
4814 491 Pls
4838 491 Pls
4861 491 Pls
4885 490 Pls
4909 490 Pls
4933 490 Pls
4956 490 Pls
4980 490 Pls
5004 490 Pls
5027 490 Pls
5051 490 Pls
5075 490 Pls
5098 490 Pls
5122 490 Pls
5146 490 Pls
5170 490 Pls
5193 490 Pls
5217 490 Pls
5241 489 Pls
5264 489 Pls
5288 489 Pls
5312 489 Pls
5335 489 Pls
5359 489 Pls
5383 489 Pls
5407 489 Pls
5430 489 Pls
5454 489 Pls
5478 489 Pls
5501 489 Pls
5525 489 Pls
5549 489 Pls
5572 489 Pls
5596 488 Pls
5620 488 Pls
5644 488 Pls
5667 488 Pls
5691 488 Pls
5715 488 Pls
5738 488 Pls
5762 488 Pls
5786 488 Pls
5809 488 Pls
5833 488 Pls
5857 488 Pls
5881 488 Pls
5904 488 Pls
5928 488 Pls
5952 487 Pls
5975 487 Pls
5999 487 Pls
6023 487 Pls
6046 487 Pls
6070 487 Pls
6094 487 Pls
6118 487 Pls
6141 487 Pls
6165 487 Pls
6189 487 Pls
6212 487 Pls
6236 486 Pls
6260 486 Pls
6283 486 Pls
6307 486 Pls
6331 486 Pls
6355 486 Pls
6378 486 Pls
6402 486 Pls
6426 486 Pls
6449 486 Pls
6473 486 Pls
6497 486 Pls
6520 486 Pls
6544 485 Pls
% End plot #1
1.000 UL
LTb
1022 4619 N
0 -4171 V
5925 0 V
0 4171 V
-5925 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
