%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/pkas7/Research/Work/improved-sst/mixture/plots/normal_weights_update/78.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Thu Nov  7 06:14:58 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/pkas7/Research/Work/improved-sst/mixture/plots/normal_weights_update/78.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (pkas7)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Nov  7 06:14:58 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1022 448 M
63 0 V
5862 0 R
-63 0 V
938 448 M
( 900000) Rshow
1.000 UL
LTb
1022 1044 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1e+06) Rshow
1.000 UL
LTb
1022 1640 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.1e+06) Rshow
1.000 UL
LTb
1022 2236 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.2e+06) Rshow
1.000 UL
LTb
1022 2831 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.3e+06) Rshow
1.000 UL
LTb
1022 3427 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.4e+06) Rshow
1.000 UL
LTb
1022 4023 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.5e+06) Rshow
1.000 UL
LTb
1022 4619 M
63 0 V
5862 0 R
-63 0 V
-5946 0 R
( 1.6e+06) Rshow
1.000 UL
LTb
1022 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 0) Cshow
1.000 UL
LTb
2207 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 50) Cshow
1.000 UL
LTb
3392 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 100) Cshow
1.000 UL
LTb
4577 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 150) Cshow
1.000 UL
LTb
5762 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 200) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
0 -4248 R
( 250) Cshow
1.000 UL
LTb
1.000 UL
LTb
1022 4619 N
0 -4171 V
5925 0 V
0 4171 V
-5925 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 M
(message length \(in bits\)) Cshow
grestore
LTb
LCb setrgbcolor
3984 98 M
(# of iterations) Cshow
LTb
3984 4829 M
(# of components: 78) Cshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C 1022 4527 M
24 -184 V
23 -1184 V
24 -1741 V
24 -311 V
24 -35 V
23 -19 V
24 -21 V
24 -26 V
23 -35 V
24 -43 V
24 -49 V
23 -48 V
24 -42 V
24 -32 V
24 -26 V
23 -21 V
24 -14 V
24 -9 V
23 -7 V
24 -6 V
24 -4 V
23 -3 V
24 -3 V
24 -3 V
24 -1 V
23 -2 V
24 -2 V
24 -2 V
23 -1 V
24 -2 V
24 -2 V
23 -2 V
24 -2 V
24 -2 V
24 -1 V
23 -2 V
24 -1 V
24 -2 V
23 -1 V
24 -1 V
24 -2 V
23 -1 V
24 -1 V
24 -1 V
24 -1 V
23 -1 V
24 -2 V
24 -1 V
23 -2 V
24 -1 V
24 -1 V
23 -1 V
24 0 V
24 -1 V
24 -1 V
23 -1 V
24 -1 V
24 -1 V
23 -2 V
24 -1 V
24 -3 V
23 -2 V
24 -2 V
24 -2 V
24 -2 V
23 -1 V
24 -1 V
24 -1 V
23 -1 V
24 -1 V
24 -1 V
23 0 V
24 -1 V
24 -1 V
24 -1 V
23 -1 V
24 0 V
24 -1 V
23 -1 V
24 -1 V
24 0 V
23 -1 V
24 0 V
24 -1 V
24 -1 V
23 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 -1 V
24 0 V
23 0 V
24 -1 V
24 0 V
23 0 V
24 -1 V
24 0 V
23 0 V
24 0 V
24 -1 V
stroke 3487 579 M
24 0 V
23 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 -1 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 -1 V
23 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
stroke 5952 568 M
23 0 V
24 0 V
24 0 V
23 -1 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
23 0 V
24 0 V
1022 4527 Pls
1046 4343 Pls
1069 3159 Pls
1093 1418 Pls
1117 1107 Pls
1141 1072 Pls
1164 1053 Pls
1188 1032 Pls
1212 1006 Pls
1235 971 Pls
1259 928 Pls
1283 879 Pls
1306 831 Pls
1330 789 Pls
1354 757 Pls
1378 731 Pls
1401 710 Pls
1425 696 Pls
1449 687 Pls
1472 680 Pls
1496 674 Pls
1520 670 Pls
1543 667 Pls
1567 664 Pls
1591 661 Pls
1615 660 Pls
1638 658 Pls
1662 656 Pls
1686 654 Pls
1709 653 Pls
1733 651 Pls
1757 649 Pls
1780 647 Pls
1804 645 Pls
1828 643 Pls
1852 642 Pls
1875 640 Pls
1899 639 Pls
1923 637 Pls
1946 636 Pls
1970 635 Pls
1994 633 Pls
2017 632 Pls
2041 631 Pls
2065 630 Pls
2089 629 Pls
2112 628 Pls
2136 626 Pls
2160 625 Pls
2183 623 Pls
2207 622 Pls
2231 621 Pls
2254 620 Pls
2278 620 Pls
2302 619 Pls
2326 618 Pls
2349 617 Pls
2373 616 Pls
2397 615 Pls
2420 613 Pls
2444 612 Pls
2468 609 Pls
2491 607 Pls
2515 605 Pls
2539 603 Pls
2563 601 Pls
2586 600 Pls
2610 599 Pls
2634 598 Pls
2657 597 Pls
2681 596 Pls
2705 595 Pls
2728 595 Pls
2752 594 Pls
2776 593 Pls
2800 592 Pls
2823 591 Pls
2847 591 Pls
2871 590 Pls
2894 589 Pls
2918 588 Pls
2942 588 Pls
2965 587 Pls
2989 587 Pls
3013 586 Pls
3037 585 Pls
3060 585 Pls
3084 585 Pls
3108 584 Pls
3131 584 Pls
3155 584 Pls
3179 583 Pls
3202 583 Pls
3226 583 Pls
3250 582 Pls
3274 582 Pls
3297 582 Pls
3321 581 Pls
3345 581 Pls
3368 581 Pls
3392 580 Pls
3416 580 Pls
3439 580 Pls
3463 580 Pls
3487 579 Pls
3511 579 Pls
3534 579 Pls
3558 579 Pls
3582 578 Pls
3605 578 Pls
3629 578 Pls
3653 578 Pls
3676 578 Pls
3700 577 Pls
3724 577 Pls
3748 577 Pls
3771 577 Pls
3795 577 Pls
3819 577 Pls
3842 576 Pls
3866 576 Pls
3890 576 Pls
3913 576 Pls
3937 576 Pls
3961 576 Pls
3985 576 Pls
4008 576 Pls
4032 576 Pls
4056 576 Pls
4079 575 Pls
4103 575 Pls
4127 575 Pls
4150 575 Pls
4174 575 Pls
4198 575 Pls
4222 575 Pls
4245 575 Pls
4269 575 Pls
4293 575 Pls
4316 575 Pls
4340 575 Pls
4364 575 Pls
4387 575 Pls
4411 574 Pls
4435 574 Pls
4459 574 Pls
4482 574 Pls
4506 574 Pls
4530 574 Pls
4553 574 Pls
4577 574 Pls
4601 574 Pls
4624 574 Pls
4648 574 Pls
4672 574 Pls
4696 573 Pls
4719 573 Pls
4743 573 Pls
4767 573 Pls
4790 573 Pls
4814 573 Pls
4838 573 Pls
4861 573 Pls
4885 572 Pls
4909 572 Pls
4933 572 Pls
4956 572 Pls
4980 572 Pls
5004 572 Pls
5027 572 Pls
5051 571 Pls
5075 571 Pls
5098 571 Pls
5122 571 Pls
5146 571 Pls
5170 571 Pls
5193 571 Pls
5217 571 Pls
5241 571 Pls
5264 570 Pls
5288 570 Pls
5312 570 Pls
5335 570 Pls
5359 570 Pls
5383 570 Pls
5407 570 Pls
5430 570 Pls
5454 570 Pls
5478 570 Pls
5501 570 Pls
5525 570 Pls
5549 569 Pls
5572 569 Pls
5596 569 Pls
5620 569 Pls
5644 569 Pls
5667 569 Pls
5691 569 Pls
5715 569 Pls
5738 569 Pls
5762 569 Pls
5786 568 Pls
5809 568 Pls
5833 568 Pls
5857 568 Pls
5881 568 Pls
5904 568 Pls
5928 568 Pls
5952 568 Pls
5975 568 Pls
5999 568 Pls
6023 568 Pls
6046 567 Pls
6070 567 Pls
6094 567 Pls
6118 567 Pls
6141 567 Pls
6165 567 Pls
6189 567 Pls
6212 567 Pls
6236 567 Pls
% End plot #1
1.000 UL
LTb
1022 4619 N
0 -4171 V
5925 0 V
0 4171 V
-5925 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
